package commEx;

public class ExamArray {

	public static void main(String[] args) {
		// 배열이란 동일한 자료형으로 선언된 데이터 공간을 
		// 메모리 상에 연속적으로 나열하여 데이터 관르이 효율성을 높이는 것이다.
		
		// 배열의 종류에는 단일차원 배열과 다 차원 배열이 있다. 
		// 단일차원배열이란 한마디로 1차원적인 데이터의 나열이다.
		// 단일차원배열은 두가지 방법으로 선언 가능하다.
		// 1.자료형[] 배열명;
		int[] arr_1; // 인트타입에 배열명은 arr_1 로 선언
		// 2.자료형 배열명[];
		int arr_2[];
		
		//단일 차원 배열은 두가지 방법으로 초기화 가능하다
		//1.배열명 = new 자료형[갯수];
		arr_1 = new int[5];
		int[] sorry = new int[10];
		
		//2.배열명 = new 자료형[갯수]{초기값,초기값.....};
		// 당연히 선언과 초기화를 동시에 할 수 있다.
		int[] arr_3 = {1,2,3,4,5,6,7,8,9,10};
		
		// arr_1은 int자료형이 들어갈 수 있는 공간(객체) 10개를 가지고 있는 배열 객체이다.
		// 10개의 공간 모두 빈 공간으로 default값으로 초기화 되어 있다. (int자료형의 default값은 0이다)
		// arr_1이란 배열객체는 heap영역에 어떠한 공간 하나를 참조하고 있다.
		// 그리고 arr_1의 크기만큼 연속된 숫자로 방을 만들었다.  int형은 4byte 자료형이니 
		// 만약 arr_1이 100번 주소를 참조하고 있고 크기가 5라면 
		// arr_1[0]->100 arr_1[1] ->104, arr_1[2] -> 108 ...arr_1[4] -> 116
		
		/*다차원 배열*/
		// 다차원 배열에는 대표적으로 이중배열이 있다.
		// 선언
		// 자료형[][] 배열명;
		double[][] arr_double_1;
		
		//자료형 [] 배열명 [];
		double[] arr_dobule_2[];
		//자료형 배열명[][];
		double arr_double_3[][];
		
		// 다차원 배열 초기화
		// 배열명 = new 자료형[개수][개수];
		arr_double_1 = new double[3][5];
		
		// 배열명 = new 자료형[][]{{},{}};
		arr_dobule_2 = new double[][]{{1.0,2.0,3.0},{4.0,5.0,6.0}};
		
		// 배열명 = new 자료형[개수][]; -동적배열 
		arr_double_3 = new double[3][];
		
		//arr_dobule_1배열객체는 new double[3][5]; 로 초기화 되었다. [행 Row ][열 column]
		// 무슨 의미일까?
		// 단일 차원 배열이 하나의 주소값을 참조하여 그 주소값으로부터 배열의 크기만큼 일열로 나열된 거라면 
		// 이중 배열은 여러개의 주소를 참조하여 여러 열을 나열시킨 것이다. 
		// double[3][5]라는 뜻은 크기 5개의 열이 3줄 있다는 것이다.  //행 = Row = 가로방향         열 = column = 세로방향 
		
		arr_dobule_2 = new double[2][3]; //[Row=행=세로][Column=열=가로]
		
		int[][] number = new int[2][4]; // 4개의 원소를 가진 배열이 2개 있다
		 number[0][0] = 10; 
		 number[0][1] = 20;
		 number[0][2] = 30;
		 number[0][3] = 40;
		 number[1][0] = 10; 
		 number[1][1] = 20;
		 number[1][2] = 30;
		 number[1][3] = 40;
		 
		 
		 /*공간1		공간1
		  *공간2		공간2
		  *3		3
		  *4		4
		  *5		5
		  *6		6
		  *7		7
		  *8		8
		  *9		9
		  *10 		10
		  */
		
		 
		for(int i = 0; i<number.length; i++) {
			for(int j = 0; j<4; j++) {
				System.out.println(number[i][j]+" ");
				
			}
			System.out.println(i+"행 = Row = 가로"+"--------------------------");
		}
		

	}

}
